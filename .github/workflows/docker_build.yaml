name: Build and Push

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AWS_REGION : ap-northeast-2

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: master

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: docker/Dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ttm:latest

  replace-and-run:
    runs-on: ubuntu-latest
    environment: master
    needs: build-and-push

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ap-northeast-2
        role-to-assume: arn:aws:iam::991625847978:role/TTMpolicy

    - name: Get Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: |
          SECRETS,prod/ttm/api

    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker rm -f $(docker ps -qa)
          docker system prune -a -f --volumes

          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ttm
          docker run -d \
            -e DB_USER="${{ SECRETS.DB_USER }}" \
            -e DB_PASSWORD="${{ SECRETS.DB_PASSWORD }}" \
            -e DB_HOST="${{ SECRETS.DB_HOST }}" \
            -e DB_NAME="${{ SECRETS.DB_NAME }}" \
            -e DB_PORT="${{ SECRETS.DB_PORT }}"
            -p 80:80/tcp \
            --name TTM-app ${{ secrets.DOCKERHUB_USERNAME }}/ttm
